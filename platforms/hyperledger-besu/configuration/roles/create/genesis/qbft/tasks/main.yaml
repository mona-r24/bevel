##############################################################################################
#  Copyright Walmart Inc. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# create build directory
- name: Create build directory if it does not exist
  file:
    path: "{{build_path}}"
    state: directory

# Set node_list to empty
- name: Set node_list to empty
  set_fact:
    node_list: []

# This task fetch (org,node) pairs for each validating node present in all organizations of the network
- name: Fetching data of validator nodes in the network from network.yaml
  include_tasks: node_data.yaml
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: org

# This tasks checks the crypto material in the vault
- name: Get crypto from vault
  include_tasks: check_vault.yaml
  vars:
    component_ns: "{{ org.name | lower }}-bes"
    vault: "{{ org.vault }}"
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: org

# This task displays the genesis file content
- name: Display genesis file contents
  debug:
    msg: "The genesis file is: {{ lookup('file', '{{ playbook_dir }}/build/crypto/genesis.json') }}"
    verbosity: 2
  when: 
   - add_new_org is not defined or add_new_org|bool == False

# This task writes the genesis base64 data to the file
- name: write the genesis file
  copy:
    content: "{{ genesis }}"
    dest: "{{ network.config.genesis }}"
  vars:
    genesis: "{{ lookup('file', '{{ build_path }}/crypto/genesis.json') | b64encode }}"
  when: 
   - add_new_org is not defined or add_new_org|bool == False

# This tasks copy the genesis to the vault
- name: Copy the crypto material to Vault
  include_tasks: add_to_vault.yaml
  vars:
    component_ns: "{{ org.name | lower }}-bes"
    vault: "{{ org.vault }}"
    genesis: "{{ lookup('file', '{{ build_path }}/crypto/genesis.json') | b64encode }}"
  loop: "{{ network['organizations'] }}"
  loop_control:
    loop_var: org
